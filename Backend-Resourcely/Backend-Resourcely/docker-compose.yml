version: '3.8'

services:
  frontend:
    build:
      context: ../../Frontend-Resourcely
      dockerfile: dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./Frontend-Resourcely:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build: .
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Server=mssql,1433;Database=resourcelydb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;Encrypt=False;
    depends_on:
      mssql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'YourStrong!Passw0rd' -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mssql_data:

networks:
  app-network:
    driver: bridge